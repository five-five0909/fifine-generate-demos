<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.dao.BorrowRecordDao">

    <!-- 结果映射 -->
    <resultMap id="BorrowRecordResultMap" type="com.example.entity.BorrowRecord">
        <id column="id" property="id"/>
        <result column="textbook_id" property="textbookId"/>
        <result column="textbook_title" property="textbookTitle"/>
        <result column="student_name" property="studentName"/>
        <result column="student_number" property="studentNumber"/>
        <result column="phone" property="phone"/>
        <result column="borrow_date" property="borrowDate"/>
        <result column="return_date" property="returnDate"/>
        <result column="actual_return_date" property="actualReturnDate"/>
        <result column="quantity" property="quantity"/>
        <result column="status" property="status"/>
        <result column="remark" property="remark"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 查询所有借阅记录 -->
    <select id="selectAll" resultMap="BorrowRecordResultMap">
        SELECT br.*, t.title AS textbook_title
        FROM borrow_record br
        LEFT JOIN textbook t ON br.textbook_id = t.id
        ORDER BY br.create_time DESC
    </select>

    <!-- 根据ID查询借阅记录 -->
    <select id="selectById" parameterType="java.lang.Integer" resultMap="BorrowRecordResultMap">
        SELECT br.*, t.title AS textbook_title
        FROM borrow_record br
        LEFT JOIN textbook t ON br.textbook_id = t.id
        WHERE br.id = #{id}
    </select>

    <!-- 根据条件查询借阅记录 -->
    <select id="selectByCondition" resultMap="BorrowRecordResultMap">
        SELECT br.*, t.title AS textbook_title
        FROM borrow_record br
        LEFT JOIN textbook t ON br.textbook_id = t.id
        <where>
            <if test="studentName != null and studentName != ''">
                AND br.student_name LIKE CONCAT('%', #{studentName}, '%')
            </if>
            <if test="studentNumber != null and studentNumber != ''">
                AND br.student_number = #{studentNumber}
            </if>
            <if test="status != null and status != ''">
                AND br.status = #{status}
            </if>
        </where>
        ORDER BY br.create_time DESC
    </select>

    <!-- 添加借阅记录 -->
    <insert id="insert" parameterType="com.example.entity.BorrowRecord" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO borrow_record (textbook_id, student_name, student_number, phone, borrow_date, return_date, quantity, status, remark, create_time, update_time)
        VALUES (#{textbookId}, #{studentName}, #{studentNumber}, #{phone}, #{borrowDate}, #{returnDate}, #{quantity}, #{status}, #{remark}, NOW(), NOW())
    </insert>

    <!-- 更新借阅记录 -->
    <update id="update" parameterType="com.example.entity.BorrowRecord">
        UPDATE borrow_record
        SET textbook_id = #{textbookId},
            student_name = #{studentName},
            student_number = #{studentNumber},
            phone = #{phone},
            borrow_date = #{borrowDate},
            return_date = #{returnDate},
            actual_return_date = #{actualReturnDate},
            quantity = #{quantity},
            status = #{status},
            remark = #{remark},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 删除借阅记录 -->
    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM borrow_record WHERE id = #{id}
    </delete>

    <!-- 根据学生学号查询借阅记录 -->
    <select id="selectByStudentNumber" parameterType="java.lang.String" resultMap="BorrowRecordResultMap">
        SELECT br.*, t.title AS textbook_title
        FROM borrow_record br
        LEFT JOIN textbook t ON br.textbook_id = t.id
        WHERE br.student_number = #{studentNumber}
        ORDER BY br.create_time DESC
    </select>

    <!-- 查询逾期记录 -->
    <select id="selectOverdueRecords" resultMap="BorrowRecordResultMap">
        SELECT br.*, t.title AS textbook_title
        FROM borrow_record br
        LEFT JOIN textbook t ON br.textbook_id = t.id
        WHERE br.status = 'BORROWED' AND br.return_date &lt; NOW()
        ORDER BY br.return_date ASC
    </select>

    <!-- 统计借阅记录总数 -->
    <select id="count" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM borrow_record
    </select>

    <!-- 分页查询 -->
    <select id="selectByPage" resultMap="BorrowRecordResultMap">
        SELECT br.*, t.title AS textbook_title
        FROM borrow_record br
        LEFT JOIN textbook t ON br.textbook_id = t.id
        ORDER BY br.create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

</mapper> 